'use strict';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.config = void 0;
const util_1 = __importDefault(require("util"));
const bunyan = require('bunyan');
const pkg = require('./package.json');
const parseLogLevel = (envValue) => {
    const defaultLevel = 'INFO';
    const desiredLevel = envValue ? String(envValue).toUpperCase() : defaultLevel;
    const levels = [
        'FATAL',
        'ERROR',
        'WARN',
        'INFO',
        'DEBUG',
        'TRACE'
    ];
    const hasMatch = levels.includes(desiredLevel);
    const level = hasMatch ? desiredLevel : defaultLevel;
    if (!hasMatch) {
        const available = `Please specify one of ${util_1.default.inspect(levels)}.`;
        const message = `Uknown log level "${desiredLevel}". ${available}`;
        throw new Error(message);
    }
    return bunyan[level];
};
const parseApiSecret = () => {
    const valid = process.env.hasOwnProperty('API_SECRET')
        && (typeof process.env.API_SECRET === 'string')
        && (process.env.API_SECRET.length > 0);
    if (!valid)
        throw new Error('API_SECRET must be non-empty string');
    return process.env.API_SECRET;
};
exports.config = {
    name: 'events',
    logLevel: parseLogLevel(process.env.LOG_LEVEL),
    secret: parseApiSecret(),
    http: {
        host: process.env.HOST || '0.0.0.0',
        port: process.env.hasOwnProperty('PORT')
            ? parseInt(process.env.PORT, 10)
            : 8000,
        prefix: `/${pkg.api}`
    },
    redis: {
        host: process.env.REDIS_EVENTS_PORT_6379_TCP_ADDR || 'localhost',
        port: +process.env.REDIS_EVENTS_PORT_6379_TCP_PORT || 6379
    },
    pollTimeout: +process.env.POLL_TIMEOUT || 5000
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLFlBQVksQ0FBQzs7Ozs7O0FBRWIsZ0RBQXdCO0FBQ3hCLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUNqQyxNQUFNLEdBQUcsR0FBRyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztBQUV0QyxNQUFNLGFBQWEsR0FBRyxDQUFDLFFBQVEsRUFBRSxFQUFFO0lBQ2pDLE1BQU0sWUFBWSxHQUFHLE1BQU0sQ0FBQztJQUM1QixNQUFNLFlBQVksR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDO0lBQzlFLE1BQU0sTUFBTSxHQUFHO1FBQ2IsT0FBTztRQUNQLE9BQU87UUFDUCxNQUFNO1FBQ04sTUFBTTtRQUNOLE9BQU87UUFDUCxPQUFPO0tBQ1IsQ0FBQztJQUVGLE1BQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDL0MsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQztJQUVyRCxJQUFJLENBQUMsUUFBUSxFQUFFO1FBQ2IsTUFBTSxTQUFTLEdBQUcseUJBQXlCLGNBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztRQUNuRSxNQUFNLE9BQU8sR0FBRyxxQkFBcUIsWUFBWSxNQUFNLFNBQVMsRUFBRSxDQUFDO1FBQ25FLE1BQU0sSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDMUI7SUFFRCxPQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN2QixDQUFDLENBQUM7QUFFRixNQUFNLGNBQWMsR0FBRyxHQUFHLEVBQUU7SUFDMUIsTUFBTSxLQUFLLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDO1dBQ2pELENBQUMsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsS0FBSyxRQUFRLENBQUM7V0FDNUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFFekMsSUFBSSxDQUFDLEtBQUs7UUFDUixNQUFNLElBQUksS0FBSyxDQUFDLHFDQUFxQyxDQUFDLENBQUM7SUFFekQsT0FBTyxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQztBQUNoQyxDQUFDLENBQUM7QUFFVyxRQUFBLE1BQU0sR0FBRztJQUNwQixJQUFJLEVBQUUsUUFBUTtJQUNkLFFBQVEsRUFBRSxhQUFhLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUM7SUFDOUMsTUFBTSxFQUFFLGNBQWMsRUFBRTtJQUV4QixJQUFJLEVBQUU7UUFDSixJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksU0FBUztRQUNuQyxJQUFJLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDO1lBQ3RDLENBQUMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFLLEVBQUUsRUFBRSxDQUFDO1lBQ2pDLENBQUMsQ0FBQyxJQUFJO1FBQ1IsTUFBTSxFQUFFLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRTtLQUN0QjtJQUVELEtBQUssRUFBRTtRQUNMLElBQUksRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLCtCQUFnQyxJQUFJLFdBQVc7UUFDakUsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQywrQkFBZ0MsSUFBSSxJQUFJO0tBQzVEO0lBRUQsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFhLElBQUksSUFBSTtDQUNoRCxDQUFDIn0=